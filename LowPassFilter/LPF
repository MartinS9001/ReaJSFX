// (C) 2019, Marcin Sobczak.

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.


desc: Low Pass Filter


//tags: Filter
//author: Marcin Sobczak

slider1:12000<20,20000,1> Cutoff Frequency


in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
prev0 = 0.0;
prev1 = 0.0;

PI = 3.14;

function LowPass(x, prevx, alfa)
(
  x = alfa * prevx + (1 - alfa)*x;
  prevx = x;
);

@slider
freq = slider1;


alfa = 2*PI*freq/srate;


@sample  

spl0 = LowPass(spl0, prev0, alfa);
spl1 = LowPass(spl1, prev1, alfa);


