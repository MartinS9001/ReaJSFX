version: 1.0.0
desc: The Drop
author: Marcin Sobczak from Glitch Hackers
about: Bass enhancement plugin
	#The Drop bass enhancement plugin 
	From gentle harmonics to fat saturation
changelog: Initial release
link: 


// (C) 2022, Marcin Sobczak. Saturation plugin "The Drop"

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.

// Further more is this released under the GPL License:
// http://www.gnu.org/licenses/gpl.html





//author: Marcin Sobczak

slider1:0.01<0, 0.99, 0.01> Cutoff
slider2:0.01<0, 0.90, 0.01> Resonance
slider3:1<1,20,0.1>Saturation
slider4:1<0,1,1{Tanh, Hyperbolic}>Flavour
slider5:0<0,2,1{Low, Medium, High}>Distortion
slider6:1<0, 1, 0.1> Dry Gain
slider7:1<0, 1, 0.1> Wet Gain

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init

prevYlpf0 = 0.0;
prevYlpf1 = 0.0;

prevXhpf0 = 0.0;
prevXhpf1 = 0.0;

prevYhpf0 = 0.0;
prevYhpf1 = 0.0;

buf0 = 0.0;
buf1 = 0.0;

PI = 3.14;

//y[i] := y[i-1] + α * (x[i] - y[i-1])
function lpf(x, freq, res,  prevY)
(
	feedbackAmount = res + res/(1.0 - freq);
	buf0 += freq * (x - buf0 + feedbackAmount * (buf0 - buf1));
	buf1 += freq * (buf0 - buf1)
	//x = (2*alfa - 1) * (2*alfa - 1) * (2*alfa - 1) * (alfa*prevY + (1-alfa) * x);
	 
);


//y[i] := α × (y[i−1] + x[i] − x[i−1])
function hpf(x, freq, prevX, prevY)
(
	alfa = 2*freq / srate; //exp(-2*PI*freq/srate);
	x = alfa*prevY + alfa*x - alfa*prevX;
	
	prev2X = x;
	prev2Y = x;
	
	x = alfa*prev2Y + alfa*x - alfa*prev2X;
	
	prev3X = x;
	prev3Y = x;
	
	x = alfa*prev3Y + alfa*x - alfa*prev3X;
	
);
//feedbackAmount = resonance + resonance/(1.0 - cutoff);
/*buf0 += cutoff * (inputValue - buf0 + feedbackAmount * (buf0 - buf1));
buf0 += cutoff * (inputValue - buf0);
buf1 += cutoff * (buf0 - buf1);

*/



function tanh(x)
  instance(x2)
(
	x = min(max(x,-1.13894395),1.13894395);
	x2 = x * x;
	x*(1 - x2*(0.3333333333 - x2*(0.1333333333 - x2*0.053968254)));
);

function hyper(x)
(
	x = x / (1 + abs(x));
);


@slider

freq = slider1;
res = slider2;
sat = slider3;
flav = slider4;
dist = 1;
slider5 == 0 ? (dist =1);
slider5 == 1 ? (dist =4);
slider5 == 2 ? (dist =25);
dGain = slider6;
wGain = slider7;


@sample

flav == 0  ?(

	lpfStage0 = lpf(spl0, freq, prevYlpf0);
	lpfStage1 = lpf(spl1, freq, prevYlpf1);
	
	/*
	satStage0 = tanh(lpfStage0 * sat * dist);
	satStage1 = tanh(lpfStage1 * sat * dist);
	
	hpfStage0 = hpf(satStage0, freq, prevXhpf0, prevYhpf0);
	hpfStage1 = hpf(satStage1, freq, prevXhpf1, prevYhpf1);
	
	spl0 = spl0 * dGain + hpfStage0 * wGain;
	spl1 = spl1 * dGain + hpfStage1 * wGain;*/
	
	spl0 = lpfStage0;
	spl1 = lpfStage1;
 
	
	prevYlpf0 = lpfStage0;
	prevYlpf1 = lpfStage1;
	
	prevXhpf0 = satStage0;
	prevXhpf1 = satStage1;
	
	prevYhpf0 = hpfStage0;
	prevYhpf1 = hpfStage1;
  
);

flav == 1  ?(

	lpfStage0 = lpf(spl0, freq, prevYlpf0);
	lpfStage1 = lpf(spl1, freq, prevYlpf1);
		
	satStage0 = hyper(lpfStage0 * sat * dist);
	satStage1 = hyper(lpfStage1 * sat * dist);
		
	hpfStage0 = hpf(satStage0, freq, prevXhpf0, prevYhpf0);
	hpfStage1 = hpf(satStage1, freq, prevXhpf1, prevYhpf1);
		
	spl0 = spl0 * dGain + hpfStage0 * wGain;
	spl1 = spl1 * dGain + hpfStage1 * wGain;
	 
		
	prevYlpf0 = lpfStage0;
	prevYlpf1 = lpfStage1;
		
	prevXhpf0 = satStage0;
	prevXhpf1 = satStage1;
		
	prevYhpf0 = hpfStage0;
	prevYhpf1 = hpfStage1;


  
);
